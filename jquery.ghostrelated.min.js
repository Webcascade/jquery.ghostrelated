!function(t){function e(t){for(var e,r,n=t.length;n;e=Math.floor(Math.random()*n),r=t[--n],t[n]=t[e],t[e]=r);return t}function r(e,r){this.element=e,this.options=t.extend({},defaults,r),this.parseRss()}defaults={feed:"/rss",titleClass:".post-title",tagsClass:".tags",limit:3,debug:!1},r.prototype.displayRelated=function(r){var n=this,i=0;this._currentPostTags=this.getCurrentPostTags(this.options.tagsClass);var o=this.matchByTag(e(this._currentPostTags),e(r));o.forEach(function(e){if(i<n.options.limit){var r='<article class="post related">';e.imageUrl&&(r+='<figure class="post-image"><a href="'+e.url+'"><img src="'+e.imageUrl+'" alt="'+e.title+'" /></a></figure>'),r+='<h4><a href="'+e.url+'">'+e.title+"</a></h4></article>",t(n.element).append(t(r))}i++})},r.prototype.parseRss=function(e,r,n){var i=e||1,o=r||"",s=n||[],a=this;t.ajax({url:this.options.feed+"/"+i,type:"GET"}).done(function(e){var r=t(e).find("item > guid").text();if(r!=o)s.push(e),a.parseRss(i+1,r,s);else{var n=a.getPosts(s);a.displayRelated(n)}}).fail(function(t){a.reportError(t)})},r.prototype.getCurrentPostTitle=function(e){"."!=e[0]&&(e="."+e);var r=t(e).text();return r.length<1&&this.reportError("Couldn't find the post title with class: "+e),r},r.prototype.getCurrentPostTags=function(e){"."!=e[0]&&(e="."+e);var r=[];return t(e+" a").each(function(){r.push(t(this).text())}),r.length<1&&this.reportError("Couldn't find any tags in this post"),r},r.prototype.getPosts=function(e){function r(e){return t(e).text()}var n=[],i=[];e.forEach(function(e){i=t.merge(i,t(e).find("item"))});for(var o=0;o<i.length;o++){var s=t(i[o]);s.find("title").text()!==this.getCurrentPostTitle(this.options.titleClass)&&n.push({title:s.find("title").text(),url:s.find("link").text(),content:s.find("description").text(),imageUrl:s.find("media\\:content,content").attr("url"),tags:t.map(s.find("category"),r)})}return n.length<1&&this.reportError("Couldn't find any posts in feed: "+feed),n},r.prototype.matchByTag=function(t,e){var r=[];return e.forEach(function(e){var n=!1;e.tags.forEach(function(i){t.forEach(function(t){t.toLowerCase()!==i.toLowerCase()||n||(r.push(e),n=!0)})})}),r.length<1&&this.reportError("There are no closely related posts"),r},r.prototype.reportError=function(e){this.options.debug&&t(this.element).append(t("<li>"+e+"</li>"))},t.fn.ghostRelated=function(t){return this.each(function(){new r(this,t)})}}(jQuery);
